version: '3.9'

services:

  ##############################
  #     Certbot Environment    #
  ##############################

  certbot:
    container_name: certbot
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./config/certbot/conf:/etc/letsencrypt
      - ./config/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - nginx_network

  ##############################
  #        Global NGINX        #
  ##############################

  nginx:
    container_name: nginx
    image: nginx
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./config/nginx/production/global:/etc/nginx/conf.d
      - ./config/certbot/conf:/etc/letsencrypt
      - ./config/certbot/www:/var/www/certbot
    depends_on:
      - backend
      - authentication
      - flower
      - chat
    networks:
      - nginx_network

  ##############################
  #   Application Environment  #
  ##############################

  db:
    container_name: db
    image: postgis/postgis
    ports: 
      - 5432:5432
    restart: unless-stopped
    volumes:
      - database_data:/var/lib/postgresql/data/
    networks:
      - app_db_network
    env_file:
      - ./config/environment/.env.db

  backend:
    container_name: backend
    build: ./backend
    restart: unless-stopped
    command:  uvicorn main:app --host 0.0.0.0 --port 8000
    expose:
      - 8000
    volumes:
      - .:/app
    networks:
      - nginx_network
      - app_network
      - app_db_network
    env_file:
      - ./config/environment/.env.back
    depends_on:
      - db
      - redis

  redis:
    container_name: redis
    image: redis:7.0.0-alpine
    restart: unless-stopped
    ports: 
      - 6379:6379
    networks:
      - app_network
      - app_db_network
    expose:
      - 6379

  celery_worker:
    container_name: celery
    build: ./backend
    restart: unless-stopped
    environment:
      - CELERY=True
    command: celery --app=main.celery worker --loglevel=info --queues=hello_world
    volumes:
      - .:/app
    networks:
      - app_network
      - app_db_network
    env_file:
      - ./config/environment/.env.back
    depends_on:
      - backend
      - redis

  flower:
    container_name: flower
    build: ./backend
    restart: unless-stopped
    environment:
      - CELERY=True
    command: celery --app=main.celery flower --port=5555
    expose:
      - 5555
    volumes:
      - .:/app
    networks:
      - nginx_network
      - app_network
      - app_db_network
    env_file:
      - ./config/environment/.env.back
    depends_on:
      - backend
      - redis
      - celery_worker


  ##############################
  # Authentication Environment #
  ##############################

  db_auth:
    container_name: db_auth
    image: postgres
    restart: unless-stopped
    volumes:
      - database_auth_data:/var/lib/postgresql/data_auth/
    networks:
      - auth_db_network
    env_file:
      - ./config/environment/.env.db_auth
    expose:
      - 5433

  authentication:
    container_name: authentication
    build: ./authentication
    restart: unless-stopped
    command:  uvicorn main:app --host 0.0.0.0 --port 8000
    expose:
      - 8000
    volumes:
      - .:/app
    networks:
      - nginx_network
      - auth_db_network
    env_file:
      - ./config/environment/.env.auth
    depends_on:
      - db_auth

  ##############################
  # Chat Environment #
  ##############################

  db_chat:
    container_name: db_chat
    image: postgres:13
    restart: unless-stopped
    volumes:
      - messagingDB:/var/lib/postgresql/data
    env_file: 
      - ./config/environment/.env.db_chat
    expose:
      - 5432
    networks:
      - chat_network

  chat:
    build:
      context: chat
      dockerfile: Dockerfile
    container_name: chat
    restart: unless-stopped
    volumes:
      - /usr/src/chat/node_modules
      - ./chat/:/usr/src/chat
    expose:
      - 7777
      - 9229
    command:
      "npm run debug"
    env_file: 
      - ./config/environment/.env.chat
    environment:
      - DUMMY=0
    depends_on:
      - db_chat
      - pubsub
    networks:
      - chat_network
      - nginx_network

  pubsub:
    container_name: pubsub
    image: redis:latest
    restart: unless-stopped
    expose:
      - 6379
    networks:
      - chat_network

networks:
  nginx_network:
    driver: bridge
  app_network:
    driver: bridge
  app_db_network:
    driver: bridge
  auth_db_network:
    driver: bridge
  chat_network:
    driver: bridge

volumes:
  database_data:
  database_auth_data:
  messagingDB:
  app: