version: '3.7'

services:
  db:
    image: postgres
    restart: always
    volumes:
      - database_data:/var/lib/postgresql/data/
    networks:
      - database_network
    env_file:
      - ./config/environment/.env.db

  backend:
    build: ./backend
    restart: always
    expose:
      - 8000
    networks:
      - nginx_network
      - database_network
    env_file:
      - ./config/environment/.env
    depends_on:
      - db

  nginx:
    image: nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./config/nginx/production:/etc/nginx/conf.d
      - ./config/certbot/conf:/etc/letsencrypt
      - ./config/certbot/www:/var/www/certbot
    depends_on:
      - backend
    networks:
      - nginx_network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./config/certbot/conf:/etc/letsencrypt
      - ./config/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  nginx_network:
    driver: bridge
  database_network:
    driver: bridge

volumes:
  database_data:
